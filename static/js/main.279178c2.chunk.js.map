{"version":3,"sources":["components/Event.js","components/EventDetails.js","components/EventList.js","components/AddEvent.js","components/App.js","serviceWorker.js","index.js"],"names":["Event","props","event","title","date","id","className","onClick","setCurrentId","type","showEventDetails","EventDetails","specificEvent","location","typeOfEvent","phone","email","description","style","width","EventList","currentId","sortedEvents","events","sort","a","b","dateAdded","detailedEvent","filter","detail","eventList","map","key","marginTop","textAlign","isDetailActive","overflow","AddEvent","currentDate","Date","toISOString","slice","minDateValue","parseInt","maxDateValue","maxDate","minDate","state","image","active","errors","title_validation_msg","location_validation_msg","typeOfEvent_validation_msg","phone_validation_msg","email_validation_msg","description_validation_msg","wasFormValidated","messages","title_incorrect","date_incorrect","location_incorrect","typeOfEvent_incorrect","phone_incorrect","email_incorrect","description_incorrect","formValidation","correct","date_validation_msg","letters","length","match","indexOf","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","validation","addEvent","$","get","reset","handleClear","noValidate","htmlFor","this","onChange","min","max","text","typeOfEvenet","maxHeight","minHeight","Component","App","counter","getTime","formIsActive","prevState","handleFormActivation","EventsInLocalStorage","JSON","parse","localStorage","getItem","console","log","setItem","stringify","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.279178c2.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Event.css';\r\n\r\n\r\nconst Event = (props) => {\r\n    \r\n    \r\n\r\n    const {title, date, id} = props.event\r\n    \r\n    return ( \r\n\r\n        <div className=\"card eventElementColor bg-light border-bottom-0 border-top-0\">\r\n            <div className=\"card-body\" onClick={() => props.setCurrentId(id)}>\r\n                <h5 className=\"card-title\">{title}</h5>\r\n                <h6 className=\"card-subtitle mt-2 text-muted\">{date}</h6>\r\n            </div>\r\n            <button type=\"button\" className=\"float-right btn btn-outline-secondary p-2\" onClick={() => props.showEventDetails(id)}>Show details</button>\r\n        </div>\r\n\r\n     );\r\n}\r\n \r\nexport default Event;","import React from 'react';\r\nimport './EventDetails.css';\r\n\r\n\r\n\r\n\r\nconst EventDetails = (props) => {\r\n   \r\n    const { title, date, location, typeOfEvent, phone, email, description } = props.specificEvent\r\n    \r\n    return (\r\n      \r\n        <div className=\"card border-0 detailsContainer\">\r\n            <div className=\"card-body\">\r\n            <h4 className=\"card-title detailsTitle\"><b><i>{title}</i></b></h4>\r\n            {/* <div className=\"row\">\r\n            <h6 className=\"card-subtitle mt-3\"><b className=\"col-2\">Date:</b> <i className=\"card-text text-muted\">{date}</i></h6>\r\n            </div>\r\n            <div className=\"row\">\r\n            <h6 className=\"card-subtitle mt-3\"><b className=\"col-2\">Location:</b> <i className=\"card-text text-muted\">{location}</i></h6>\r\n            </div>\r\n            <div className=\"row\">\r\n            <h6 className=\"card-subtitle mt-3\"><b className=\"col-2\">Type:</b> <i className=\"card-text text-muted\">{typeOfEvent}</i></h6>\r\n            </div>\r\n            <div className=\"row\">\r\n            <h6 className=\"card-subtitle mt-3\"><b className=\"col-2\">Phone number:</b> <i className=\"card-text text-muted\">{phone}</i></h6>\r\n            </div>\r\n            <div className=\"row\">\r\n            <h6 className=\"card-subtitle mt-3\"><b className=\"col-2\">E-mail:</b> <i className=\"card-text text-muted\">{email}</i></h6>\r\n            </div>\r\n            <div className=\"row\">\r\n            <h6 className=\"card-subtitle mt-3\"><b className=\"col-2\">Description:</b> <i className=\"card-text text-muted\">{description}</i></h6>\r\n            </div> */}\r\n\r\n            <div className=\"p-2 border-bottom\">\r\n                <div className=\"d-inline ml-2 font-weight-bold font-italic float-left\">Date: </div>\r\n                <div className=\"d-block mx-auto font-italic text-muted\" style={{width:\"50%\"}}>{date}</div>\r\n            </div>\r\n            <div className=\"p-2 border-bottom\">\r\n                <div className=\"d-inline ml-2 font-weight-bold font-italic float-left\">Location:</div>\r\n                <div className=\"d-block mx-auto font-italic text-muted\" style={{width:\"50%\"}}>{location}</div>\r\n            </div>\r\n            <div className=\"p-2 border-bottom\">\r\n                <div className=\"d-inline ml-2 font-weight-bold font-italic float-left\">Type:</div>\r\n                <div className=\"d-block mx-auto font-italic text-muted\" style={{width:\"50%\"}}>{typeOfEvent}</div>\r\n            </div>\r\n            <div className=\"p-2 border-bottom\">\r\n                <div className=\"d-inline ml-2 font-weight-bold font-italic float-left\">Phone:</div>\r\n                <div className=\"d-block mx-auto font-italic text-muted\" style={{width:\"50%\"}}>{phone}</div>\r\n            </div>\r\n            <div className=\"p-2 border-bottom\">\r\n                <div className=\"d-inline ml-2 font-weight-bold font-italic float-left\">E-mail:</div>\r\n                <div className=\"d-block mx-auto font-italic text-muted\" style={{width:\"50%\"}}>{email}</div>\r\n            </div>\r\n            <div className=\"p-2 border-bottom\">\r\n                <div className=\"d-inline ml-2 font-weight-bold font-italic float-left\">Description:</div>\r\n                <div className=\"d-block mx-auto font-italic text-muted\" style={{width:\"50%\"}}>{description}</div>\r\n            </div>\r\n\r\n\r\n            </div>\r\n            <div className=\"row\">\r\n            <button type=\"button\" className=\"btn btn-outline-secondary eventInfo align-self-end btn-block \" onClick={props.showEventDetails}>Return to events</button>\r\n            </div>\r\n        </div>\r\n      )\r\n    }\r\n \r\nexport default EventDetails;","import React from 'react';\r\nimport Event from './Event';\r\nimport EventDetails from './EventDetails';\r\nimport './EventList.css';\r\n\r\n\r\nconst EventList = (props) => {\r\n\r\n    const id = props.currentId\r\n\r\n    const sortedEvents = props.events.sort((a,b) => b.dateAdded - a.dateAdded)\r\n    const detailedEvent = props.events.filter(detail => detail.id === id)\r\n    const specificEvent = detailedEvent[0];\r\n\r\n    const eventList = sortedEvents.map(event => <Event key={event.id} event={event} setCurrentId={props.setCurrentId} showEventDetails={props.showEventDetails}/>)\r\n    \r\n    return ( \r\n\r\n        <div className=\"card\" style={{marginTop: 20}}>\r\n            <div className=\"card-body border-0 rounded bg-secondary text-white\">\r\n                <div className=\"card-title eventListHeader\"><h2 style={{textAlign: \"center\"}}>{props.isDetailActive ? \"EVENT DETAILS\" : \"EVENT LIST\"}</h2></div>\r\n            </div >\r\n            <div className=\"eventList\" style={props.isDetailActive ? {overflow: \"hidden\"} : {overflow: \"auto\"}}>\r\n                {props.isDetailActive ? <EventDetails detailedEvent={detailedEvent} specificEvent={specificEvent} showEventDetails={props.showEventDetails}/> : eventList}\r\n                \r\n                \r\n            </div>\r\n        </div>\r\n        \r\n     );\r\n}\r\n \r\nexport default EventList;","import React, { Component } from 'react';\r\nimport $ from 'jquery';\r\n\r\nclass AddEvent extends Component {\r\n    currentDate = new Date().toISOString().slice(0,10)\r\n    minDateValue = parseInt(this.currentDate.slice(0, 4))\r\n    maxDateValue = parseInt(this.currentDate.slice(0, 4)) + 10 \r\n    maxDate = this.maxDateValue + \"-12-31\"\r\n    minDate = this.minDateValue + \"-01-01\"\r\n\r\n    state = { \r\n        title: '',\r\n        date: '',\r\n        location: '',\r\n        typeOfEvent: '',\r\n        phone: '',\r\n        email: '',\r\n        description: '',\r\n        image: null,\r\n        active: false,\r\n\r\n        errors: {\r\n            title: false,\r\n            date: false,\r\n            location: false,\r\n            typeOfEvent: false,\r\n            phone: false,\r\n            email: false,\r\n            description: false,\r\n            title_validation_msg:\"\",\r\n            location_validation_msg:\"\",\r\n            typeOfEvent_validation_msg:\"\",\r\n            phone_validation_msg:\"\",\r\n            email_validation_msg:\"\",\r\n            description_validation_msg:\"\",\r\n        },\r\n\r\n        wasFormValidated: false,\r\n\r\n     }\r\n     \r\n     messages = {\r\n        title_incorrect: 'Must contain at least 4 up to 40 characters and at least one letter',\r\n        date_incorrect: 'Please insert a valid date. Possible dates range starts from 2019 to 2029',\r\n        location_incorrect: 'Must contain at least 4 up to 40 characters and at least one letter',\r\n        typeOfEvent_incorrect: 'Select one of the listed options',\r\n        phone_incorrect: 'Must be extaclly 9 digits',\r\n        email_incorrect: 'Must contain \"@\"  and \".\" signs and at least one letter',\r\n        description_incorrect: 'Must contain at least 4 up to 64 characters and at least one letter',\r\n     }\r\n\r\n     formValidation = () => {\r\n\r\n        let title = false;\r\n        let date = false;\r\n        let location = false;\r\n        let typeOfEvent = false;\r\n        let phone = false;\r\n        let email = false;\r\n        let description = false;\r\n        let correct = false;\r\n        let title_validation_msg = \"\";\r\n        let date_validation_msg = \"\";\r\n        let location_validation_msg = \"\";\r\n        let typeOfEvent_validation_msg = \"\";\r\n        let phone_validation_msg = \"\";\r\n        let email_validation_msg = \"\";\r\n        let description_validation_msg = \"\";\r\n\r\n        const letters = /[A-Za-z]/;\r\n\r\n        if(this.state.title.length >= 4 && this.state.title.length <= 40 && this.state.title.match(letters)) {\r\n            title = true;\r\n            title_validation_msg = \"valid\";\r\n        } else {\r\n            title = false;\r\n            title_validation_msg = \"invalid\";\r\n        }\r\n        if(this.state.date.length === 10 && parseInt(this.state.date.slice(0,4)) >= this.minDateValue && parseInt(this.state.date.slice(0,4)) <= this.maxDateValue ) {\r\n            date = true;\r\n            date_validation_msg = \"valid\";\r\n        } else {\r\n            date = false;\r\n            date_validation_msg = \"invalid\";\r\n        }\r\n\r\n        if(this.state.location.length >= 4 && this.state.location.length <= 40 && this.state.location.match(letters)) {\r\n            location = true;\r\n            location_validation_msg = \"valid\";\r\n        } else {\r\n            location = false;\r\n            location_validation_msg = \"invalid\";\r\n        }\r\n\r\n        if(this.state.typeOfEvent !== \"\") {\r\n            typeOfEvent = true;\r\n            typeOfEvent_validation_msg = \"valid\";\r\n        } else {\r\n            typeOfEvent = false;\r\n            typeOfEvent_validation_msg = \"invalid\";\r\n        }\r\n        if(this.state.phone.length === 9) {\r\n            phone = true;\r\n            phone_validation_msg = \"valid\";\r\n        } else {\r\n            phone = false;\r\n            phone_validation_msg = \"invalid\";\r\n        }\r\n        if(this.state.email.indexOf('@') !== -1 && this.state.email.indexOf('.') !== -1 && this.state.email.match(letters)) {\r\n            email = true;\r\n            email_validation_msg = \"valid\";\r\n        } else {\r\n            email = false;\r\n            email_validation_msg = \"invalid\";\r\n        }\r\n        if(this.state.description.length >= 4 && this.state.description.length <= 64 && this.state.description.match(letters)) {\r\n            description = true;\r\n            description_validation_msg = \"valid\";\r\n        } else {\r\n            description = false;\r\n            description_validation_msg = \"invalid\";\r\n        }\r\n        if(title && location && typeOfEvent && phone && email && description && date) {\r\n            correct = true;\r\n        }\r\n        return ({\r\n            correct,\r\n            title,\r\n            date,\r\n            location,\r\n            typeOfEvent,\r\n            phone,\r\n            email,\r\n            description,\r\n            date_validation_msg,\r\n            title_validation_msg,\r\n            location_validation_msg,\r\n            typeOfEvent_validation_msg,\r\n            phone_validation_msg,\r\n            email_validation_msg,\r\n            description_validation_msg,\r\n        })\r\n     }\r\n\r\n     handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        })\r\n     }\r\n\r\n     handleSubmit = (e) => {\r\n        \r\n        e.preventDefault();\r\n\r\n        const {title, date, location, typeOfEvent, phone, email, description} = this.state\r\n\r\n        const validation = this.formValidation()\r\n        \r\n        if(validation.correct) {\r\n            this.props.addEvent(title, date, location, typeOfEvent, phone, email, description)\r\n\r\n            this.setState({\r\n                title: '',\r\n                date: '',\r\n                location: '',\r\n                typeOfEvent: \"\",\r\n                phone: '',\r\n                email: '',\r\n                description: '' ,\r\n\r\n                errors: {\r\n                    title: false,\r\n                    date: false,\r\n                    location: false,\r\n                    typeOfEvent: false,\r\n                    phone: false,\r\n                    email: false,\r\n                    description: false,\r\n                },\r\n                wasFormValidated: false,\r\n            }) \r\n            $('form').get(0).reset();\r\n        } else {\r\n            this.setState({\r\n                errors: {\r\n                    title: !validation.title,\r\n                    date: !validation.date,\r\n                    location: !validation.location,\r\n                    typeOfEvent: !validation.typeOfEvent,\r\n                    phone: !validation.phone,\r\n                    email: !validation.email,\r\n                    description: !validation.description,\r\n                    title_validation_msg: validation.title_validation_msg,\r\n                    date_validation_msg: validation.date_validation_msg,\r\n                    location_validation_msg: validation.location_validation_msg,\r\n                    typeOfEvent_validation_msg: validation.typeOfEvent_validation_msg,\r\n                    phone_validation_msg: validation.phone_validation_msg,\r\n                    email_validation_msg: validation.email_validation_msg,\r\n                    description_validation_msg: validation.description_validation_msg,\r\n                    \r\n                },\r\n                wasFormValidated: true,\r\n            })\r\n        }\r\n        \r\n     }\r\n\r\n     handleClear = (e) => {\r\n         e.preventDefault();\r\n         \r\n            this.setState({\r\n                title: '',\r\n                typeOfEvent: '',\r\n                date: '',\r\n                location: '',\r\n                phone: '',\r\n                email: '',\r\n                description: '' ,\r\n                wasFormValidated: false,\r\n                \r\n            })\r\n            $('form').get(0).reset();\r\n        }\r\n     \r\n    \r\n\r\n    render() { \r\n\r\n        \r\n        \r\n        return ( \r\n           \r\n            \r\n            <form className=\"border rounded form\" noValidate>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"title\" className=\"col-lg-2 col-md-3 col-sm-2 col-form-label\">Title</label>\r\n                    <div className=\"col-sm-10 col-md-9 col-lg-10\">\r\n                        <input type=\"text\" name=\"title\" id=\"title\" className={`form-control ${this.state.wasFormValidated ? \"is-\"+this.state.errors.title_validation_msg : \"\"}`} value={this.state.title} onChange={this.handleChange}/>\r\n\r\n                        {this.state.errors.title && <div className=\"invalid-feedback\">{this.messages.title_incorrect}</div>}\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"location\" className=\"col-lg-2 col-md-3 col-sm-2 col-form-label\">Location</label>\r\n                    <div className=\"col-sm-10 col-md-9 col-lg-10\">\r\n                        <input type=\"text\" name=\"location\" id=\"location\" className={`form-control ${this.state.wasFormValidated ? \"is-\"+this.state.errors.location_validation_msg : \"\"}`} value={this.state.location} onChange={this.handleChange}/>\r\n                        {this.state.errors.location && <div className=\"invalid-feedback\">{this.messages.location_incorrect}</div>}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"date\" className=\"col-lg-2 col-md-3 col-sm-2 col-form-label\">Date</label>\r\n                    <div className=\"col-lg-6 col-md-9 col-sm-10\">\r\n                        <input type=\"date\"  name=\"date\" min={this.minDate} max={this.maxDate} id=\"date\" className={`form-control ${this.state.wasFormValidated ? \"is-\"+this.state.errors.date_validation_msg : \"\"}`}  value={this.state.date} onChange={this.handleChange}/>\r\n                        {this.state.errors.date && <div className=\"invalid-feedback\">{this.messages.date_incorrect}</div>}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"typeOfEvent\" className=\"col-lg-2 col-md-3 col-sm-2 col-form-label\">Type</label>\r\n                    <div className=\"col-lg-6 col-md-9 col-sm-10\">\r\n\r\n                        <select name=\"typeOfEvent\" text={this.state.typeOfEvent} className={`form-control ${this.state.wasFormValidated ? \"is-\"+this.state.errors.typeOfEvent_validation_msg : \"\"}`} value={this.state.typeOfEvenet} onChange={this.handleChange}>\r\n                            <option value=\"\">Choose...</option>\r\n                            <option value=\"Sport\" >Sport</option>\r\n                            <option value=\"Cultural\">Cultural</option>\r\n                            <option value=\"Health\">Health</option>\r\n                        </select>\r\n                        \r\n\r\n                        {this.state.errors.typeOfEvent && <div className=\"invalid-feedback\">{this.messages.typeOfEvent_incorrect}</div>}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"phone\" className=\"col-lg-2 col-md-3 col-sm-2 col-form-label\">Phone number</label>\r\n                    <div className=\"col-lg-6 col-md-9 col-sm-10\">\r\n                        <input style={{marginTop: 10}}type=\"number\" name=\"phone\" id=\"phone\" className={`form-control ${this.state.wasFormValidated ? \"is-\"+this.state.errors.phone_validation_msg : \"\"}`} value={this.state.phone} onChange={this.handleChange}/>\r\n                        {this.state.errors.phone && <div className=\"invalid-feedback\">{this.messages.phone_incorrect}</div>}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"email\" className=\"col-lg-2 col-md-3 col-sm-2 col-form-label\">Email</label>\r\n                    <div className=\"col-lg-6 col-md-9 col-sm-10\">\r\n                        <input type=\"email\" name=\"email\" id=\"email\" className={`form-control ${this.state.wasFormValidated ? \"is-\"+this.state.errors.email_validation_msg : \"\"}`} value={this.state.email} onChange={this.handleChange}/>\r\n                        {this.state.errors.email && <div className=\"invalid-feedback\">{this.messages.email_incorrect}</div>}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"description\" className=\"col-lg-2 col-md-3 col-sm-2 col-form-label\">Description</label>\r\n                    <div className=\"col-sm-10 col-md-9 col-lg-10\">\r\n                        <textarea style={{maxHeight: 200, minHeight: 68}} type=\"text\" name=\"description\" id=\"description\" className={`form-control ${this.state.wasFormValidated ? \"is-\"+this.state.errors.description_validation_msg : \"\"}`} value={this.state.description} onChange={this.handleChange}/>\r\n                        {this.state.errors.description && <div className=\"invalid-feedback\">{this.messages.description_incorrect}</div>}\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-6\">\r\n                        <button className=\"btn btn-success btn-block\" onClick={this.handleSubmit}>Submit</button>\r\n                    </div>\r\n                    <div className=\"col-sm-6\">\r\n                        <button className=\"btn btn-secondary btn-block\" onClick={this.handleClear}>Clear</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n         );\r\n    }\r\n}\r\n \r\nexport default AddEvent;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport EventList from './EventList';\r\nimport AddEvent from './AddEvent';\r\n\r\n\r\nclass App extends Component {\r\n  counter = 1;\r\n  state = { \r\n      events: [\r\n        {\r\n          id: 0,\r\n          title: 'Example event',\r\n          description: 'Just to check if everything looks fine.',\r\n          typeOfEvent: 'Sport',\r\n          phone: '777777777',\r\n          email: 'example@email.com',\r\n          location: 'London',\r\n          date: '2020-04-20',\r\n          dateAdded: new Date().getTime(),\r\n        },\r\n      ],\r\n      isDetailActive: false,\r\n      currentId: 0,\r\n      formIsActive: false,\r\n      errors: {\r\n        title: false,\r\n        date: false,\r\n        location: false,\r\n        typeOfEvent: false,\r\n        phone: false,\r\n        email: false,\r\n        description: false,\r\n    }\r\n   }\r\n   \r\n  \r\n  \r\n  addEvent = (title, date, location, typeOfEvent, phone, email, description) => {\r\n\r\n    const event = {\r\n      id: this.counter,\r\n      title,\r\n      date,\r\n      location,\r\n      typeOfEvent,\r\n      phone,\r\n      email,\r\n      description,\r\n      dateAdded: new Date().getTime(),\r\n    }\r\n    this.counter++;\r\n    this.setState(prevState => ({\r\n      events: [...prevState.events, event]\r\n    }))\r\n\r\n    return true\r\n  }\r\n\r\n  setCurrentId = (id) => {\r\n    this.setState({\r\n      currentId: id\r\n    })\r\n  }\r\n\r\n  handleFormActivation = () => {\r\n    this.setState({\r\n      formIsActive: !this.state.formIsActive\r\n    })\r\n  }\r\n\r\n  showEventDetails = (id) => {\r\n      this.setState({\r\n        isDetailActive: !this.state.isDetailActive,\r\n        currentId: id,\r\n      })\r\n  }\r\n\r\n  UNSAFE_componentWillMount() {\r\n    const EventsInLocalStorage = JSON.parse(localStorage.getItem('state'))\r\n    console.log(EventsInLocalStorage)\r\n    if(EventsInLocalStorage === null) {\r\n      localStorage.setItem('state', JSON.stringify(this.state.events)) \r\n    } \r\n    else {\r\n      this.setState({\r\n        events: EventsInLocalStorage\r\n      })\r\n      this.counter = EventsInLocalStorage.length\r\n    } \r\n    \r\n  }\r\n\r\n\r\n  componentDidUpdate() {\r\n    localStorage.setItem('state', JSON.stringify(this.state.events))\r\n  }\r\n\r\n  render() { \r\n    return ( \r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n\r\n          <div className=\"col-md formComponent\">\r\n            <button className={`btn ${this.state.formIsActive ? \"btn-danger\" : \"btn-primary\"} formActivationButton btn-block`} onClick={this.handleFormActivation}>{this.state.formIsActive ? \"Cancel\" : \"Add event\"}</button>\r\n            {this.state.formIsActive ? <AddEvent addEvent={this.addEvent} /> : null}\r\n          </div>\r\n\r\n          <div className=\"col-md\">\r\n            <EventList events={this.state.events} setCurrentId={this.setCurrentId} currentId={this.state.currentId} isDetailActive={this.state.isDetailActive} showEventDetails={this.showEventDetails}/>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>  \r\n\r\n      \r\n     );\r\n  }\r\n}\r\n \r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}