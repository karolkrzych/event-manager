{"version":3,"sources":["components/Event.js","components/EventDetails.js","components/EventList.js","components/AddEvent.js","components/App.js","serviceWorker.js","index.js"],"names":["Event","props","event","title","date","id","className","onClick","setCurrentId","type","showEventDetails","EventDetails","specificEvent","location","typeOfEvent","phone","email","description","EventList","currentId","sortedEvents","events","sort","a","b","dateAdded","detailedEvent","filter","detail","eventList","map","key","style","marginTop","textAlign","isDetailActive","overflow","AddEvent","currentDate","Date","toISOString","slice","state","image","active","errors","title_validation_msg","location_validation_msg","typeOfEvent_validation_msg","phone_validation_msg","email_validation_msg","description_validation_msg","wasFormValidated","messages","title_incorrect","date_incorrect","location_incorrect","typeOfEvent_incorrect","phone_incorrect","email_incorrect","description_incorrect","formValidation","correct","date_validation_msg","length","indexOf","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","validation","addEvent","handleClear","minDate","this","noValidate","htmlFor","onChange","typeOfEvenet","maxHeight","Component","App","getTime","formIsActive","counter","prevState","handleFormActivation","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.012ed396.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Event.css';\r\n\r\n\r\nconst Event = (props) => {\r\n    \r\n    \r\n\r\n    const {title, date, id} = props.event\r\n    \r\n    return ( \r\n\r\n        <div className=\"card eventElementColor\">\r\n            <div className=\"card-body\" onClick={() => props.setCurrentId(id)}>\r\n                <h5 className=\"card-title\">{title}</h5>\r\n                <h6 className=\"card-subtitle mt-2 text-muted\">{date}</h6>\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-outline-info info\" onClick={() => props.showEventDetails(id)}>Show details</button>\r\n        </div>\r\n\r\n     );\r\n}\r\n \r\nexport default Event;","import React from 'react';\r\nimport './EventDetails.css';\r\n\r\n\r\n\r\n\r\nconst EventDetails = (props) => {\r\n   \r\n    const { title, date, location, typeOfEvent, phone, email, description } = props.specificEvent\r\n    \r\n    return (\r\n        <div className=\"card detailsContainer\">\r\n            <div className=\"card-body\">\r\n            <h4 className=\"card-title detailsTitle\"><b><i>{title}</i></b></h4>\r\n            <h6 className=\"card-subtitle mt-3\"><b>When:</b> <i className=\"text-muted\">{date}</i></h6>\r\n            <h6 className=\"card-subtitle mt-3\"><b>Where:</b> <i className=\"text-muted\">{location}</i></h6>\r\n            <h6 className=\"card-subtitle mt-3\"><b>Type:</b> <i className=\"text-muted\">{typeOfEvent}</i></h6>\r\n            <h6 className=\"card-subtitle mt-3\"><b>Phone number:</b> <i className=\"text-muted\">{phone}</i></h6>\r\n            <h6 className=\"card-subtitle mt-3\"><b>E-mail:</b> <i className=\"text-muted\">{email}</i></h6>\r\n            <h6 className=\"card-subtitle mt-3\"><b>Description:</b> <i className=\"text-muted\">{description}</i></h6>\r\n\r\n\r\n\r\n            </div>\r\n            <div className=\"row\">\r\n            <button type=\"button\" className=\"btn btn-outline-info eventInfo btn-block \" onClick={props.showEventDetails}>Return to events</button>\r\n            </div>\r\n        </div>\r\n      )\r\n    }\r\n \r\nexport default EventDetails;","import React from 'react';\r\nimport Event from './Event';\r\nimport EventDetails from './EventDetails';\r\nimport './EventList.css';\r\n\r\n\r\nconst EventList = (props) => {\r\n\r\n    const id = props.currentId\r\n\r\n    const sortedEvents = props.events.sort((a,b) => b.dateAdded - a.dateAdded)\r\n    const detailedEvent = props.events.filter(detail => detail.id === id)\r\n    const specificEvent = detailedEvent[0];\r\n\r\n    const eventList = sortedEvents.map(event => <Event key={event.id} event={event} setCurrentId={props.setCurrentId} showEventDetails={props.showEventDetails}/>)\r\n    \r\n    return ( \r\n\r\n        <div className=\"card\" style={{marginTop: 20}}>\r\n            <div className=\"card-body border bg-secondary text-white\">\r\n                <div className=\"card-title eventListHeader\"><h2 style={{textAlign: \"center\"}}>{props.isDetailActive ? \"EVENT DETAILS\" : \"EVENT LIST\"}</h2></div>\r\n            </div >\r\n            <div className=\"eventList\" style={props.isDetailActive ? {overflow: \"hidden\"} : {overflow: \"auto\"}}>\r\n                {props.isDetailActive ? <EventDetails detailedEvent={detailedEvent} specificEvent={specificEvent} showEventDetails={props.showEventDetails}/> : eventList}\r\n                \r\n                \r\n            </div>\r\n        </div>\r\n        \r\n     );\r\n}\r\n \r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\nclass AddEvent extends Component {\r\n    currentDate = new Date().toISOString().slice(0,10);\r\n    \r\n    state = { \r\n        title: '',\r\n        date: this.currentDate,\r\n        location: '',\r\n        typeOfEvent: '',\r\n        phone: '',\r\n        email: '',\r\n        description: '',\r\n        image: null,\r\n        active: false,\r\n\r\n        errors: {\r\n            title: false,\r\n            date: false,\r\n            location: false,\r\n            typeOfEvent: false,\r\n            phone: false,\r\n            email: false,\r\n            description: false,\r\n            title_validation_msg:\"\",\r\n            location_validation_msg:\"\",\r\n            typeOfEvent_validation_msg:\"\",\r\n            phone_validation_msg:\"\",\r\n            email_validation_msg:\"\",\r\n            description_validation_msg:\"\",\r\n        },\r\n\r\n        wasFormValidated: false,\r\n     }\r\n     \r\n     messages = {\r\n        title_incorrect: 'Must contain at least 4 up to 32 characters',\r\n        date_incorrect: 'Please insert a valid date',\r\n        location_incorrect: 'Must contain at least 4 up to 32 characters',\r\n        typeOfEvent_incorrect: 'Select one of the listed options',\r\n        phone_incorrect: 'Must be extaclly 9 digits',\r\n        email_incorrect: 'Must contain \"@\" sign and \".\" sign',\r\n        description_incorrect: 'Must contain at least 4 up to 256 characters',\r\n     }\r\n\r\n     formValidation = () => {\r\n\r\n        let title = false;\r\n        let date = false;\r\n        let location = false;\r\n        let typeOfEvent = false;\r\n        let phone = false;\r\n        let email = false;\r\n        let description = false;\r\n        let correct = false;\r\n        let title_validation_msg = \"\";\r\n        let date_validation_msg = \"\";\r\n        let location_validation_msg = \"\";\r\n        let typeOfEvent_validation_msg = \"\";\r\n        let phone_validation_msg = \"\";\r\n        let email_validation_msg = \"\";\r\n        let description_validation_msg = \"\";\r\n\r\n        if(this.state.title.length >= 4 && this.state.title.length <= 32) {\r\n            title = true;\r\n            title_validation_msg = \"valid\";\r\n        } else {\r\n            title = false;\r\n            title_validation_msg = \"invalid\";\r\n        }\r\n        if(this.state.date) {\r\n            date = true;\r\n            date_validation_msg = \"valid\";\r\n        } else {\r\n            date = false;\r\n            date_validation_msg = \"invalid\";\r\n        }\r\n\r\n        if(this.state.location.length >= 4 && this.state.location.length <= 32) {\r\n            location = true;\r\n            location_validation_msg = \"valid\";\r\n        } else {\r\n            location = false;\r\n            location_validation_msg = \"invalid\";\r\n        }\r\n\r\n        if(this.state.typeOfEvent !== \"\") {\r\n            typeOfEvent = true;\r\n            typeOfEvent_validation_msg = \"valid\";\r\n        } else {\r\n            typeOfEvent = false;\r\n            typeOfEvent_validation_msg = \"invalid\";\r\n        }\r\n        if(this.state.phone.length === 9) {\r\n            phone = true;\r\n            phone_validation_msg = \"valid\";\r\n        } else {\r\n            phone = false;\r\n            phone_validation_msg = \"invalid\";\r\n        }\r\n        if(this.state.email.indexOf('@') !== -1 && this.state.email.indexOf('.') !== -1) {\r\n            email = true;\r\n            email_validation_msg = \"valid\";\r\n        } else {\r\n            email = false;\r\n            email_validation_msg = \"invalid\";\r\n        }\r\n        if(this.state.description.length >= 4 && this.state.description.length <= 256) {\r\n            description = true;\r\n            description_validation_msg = \"valid\";\r\n        } else {\r\n            description = false;\r\n            description_validation_msg = \"invalid\";\r\n        }\r\n        if(title && location && typeOfEvent && phone && email && description) {\r\n            correct = true;\r\n        }\r\n        return ({\r\n            correct,\r\n            title,\r\n            date,\r\n            location,\r\n            typeOfEvent,\r\n            phone,\r\n            email,\r\n            description,\r\n            date_validation_msg,\r\n            title_validation_msg,\r\n            location_validation_msg,\r\n            typeOfEvent_validation_msg,\r\n            phone_validation_msg,\r\n            email_validation_msg,\r\n            description_validation_msg,\r\n        })\r\n     }\r\n\r\n     handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n     }\r\n\r\n     handleSubmit = (e) => {\r\n        \r\n        e.preventDefault();\r\n\r\n        const {title, date, location, typeOfEvent, phone, email, description} = this.state\r\n\r\n        const validation = this.formValidation()\r\n        \r\n        if(validation.correct) {\r\n            this.props.addEvent(title, date, location, typeOfEvent, phone, email, description)\r\n\r\n            this.setState({\r\n                title: '',\r\n                date: this.currentDate,\r\n                location: '',\r\n                typeOfEvent: \"\",\r\n                phone: '',\r\n                email: '',\r\n                description: '' ,\r\n\r\n                errors: {\r\n                    title: false,\r\n                    date: false,\r\n                    location: false,\r\n                    typeOfEvent: false,\r\n                    phone: false,\r\n                    email: false,\r\n                    description: false,\r\n                },\r\n                wasFormValidated: false,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                errors: {\r\n                    title: !validation.title,\r\n                    date: !validation.date,\r\n                    location: !validation.location,\r\n                    typeOfEvent: !validation.typeOfEvent,\r\n                    phone: !validation.phone,\r\n                    email: !validation.email,\r\n                    description: !validation.description,\r\n                    title_validation_msg: validation.title_validation_msg,\r\n                    date_validation_msg: validation.date_validation_msg,\r\n                    location_validation_msg: validation.location_validation_msg,\r\n                    typeOfEvent_validation_msg: validation.typeOfEvent_validation_msg,\r\n                    phone_validation_msg: validation.phone_validation_msg,\r\n                    email_validation_msg: validation.email_validation_msg,\r\n                    description_validation_msg: validation.description_validation_msg,\r\n                },\r\n                wasFormValidated: true,\r\n            })\r\n        }\r\n     }\r\n\r\n     handleClear = (e) => {\r\n        \r\n         e.preventDefault();\r\n            this.setState({\r\n                title: '',\r\n                date: this.currentDate,\r\n                location: '',\r\n                typeOfEvent: '',\r\n                phone: '',\r\n                email: '',\r\n                description: '' ,\r\n                wasFormValidated: false,\r\n            })\r\n            \r\n        }\r\n     \r\n    \r\n\r\n    render() { \r\n      \r\n        let minDate = this.currentDate;\r\n        \r\n        return ( \r\n           \r\n            \r\n            <form className=\"border form\" noValidate>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"title\" className=\"col-sm-2 col-form-label\">Title</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"text\" name=\"title\" id=\"title\" className={`form-control ${this.state.wasFormValidated ? \"is-\"+this.state.errors.title_validation_msg : \"\"}`} value={this.state.title} onChange={this.handleChange}/>\r\n\r\n                        {this.state.errors.title && <div className=\"invalid-feedback\">{this.messages.title_incorrect}</div>}\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"location\" className=\"col-sm-2 col-form-label\">Location</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"text\" name=\"location\" id=\"location\" className={`form-control ${this.state.wasFormValidated ? \"is-\"+this.state.errors.location_validation_msg : \"\"}`} value={this.state.location} onChange={this.handleChange}/>\r\n                        {this.state.errors.location && <div className=\"invalid-feedback\">{this.messages.location_incorrect}</div>}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"date\" className=\"col-sm-2 col-form-label\">Date</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"date\"  name=\"date\"  id=\"date\" className={`col-sm-6 form-control ${this.state.wasFormValidated ? \"is-\"+this.state.errors.date_validation_msg : \"\"}`}  value={this.state.date || minDate} onChange={this.handleChange}/>\r\n                        {this.state.errors.date && <div className=\"invalid-feedback\">{this.messages.date_incorrect}</div>}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"typeOfEvent\" className=\"col-sm-2 col-form-label\">Type</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <select name=\"typeOfEvent\" className={`col-sm-6 form-control ${this.state.wasFormValidated ? \"is-\"+this.state.errors.typeOfEvent_validation_msg : \"\"}`} value={this.state.typeOfEvenet} onChange={this.handleChange}>\r\n                            <option value=\"\">Choose...</option>\r\n                            <option value=\"Sport\">Sport</option>\r\n                            <option value=\"Cultural\">Cultural</option>\r\n                            <option value=\"Health\">Health</option>\r\n                        </select>\r\n                        {this.state.errors.typeOfEvent && <div className=\"invalid-feedback\">{this.messages.typeOfEvent_incorrect}</div>}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"phone\" className=\"col-sm-2 col-form-label\">Phone number</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input style={{marginTop: 10}}type=\"number\" name=\"phone\" id=\"phone\" className={`col-sm-6 form-control ${this.state.wasFormValidated ? \"is-\"+this.state.errors.phone_validation_msg : \"\"}`} value={this.state.phone} onChange={this.handleChange}/>\r\n                        {this.state.errors.phone && <div className=\"invalid-feedback\">{this.messages.phone_incorrect}</div>}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"email\" className=\"col-sm-2 col-form-label\">Email</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"email\" name=\"email\" id=\"email\" className={`col-sm-6 form-control ${this.state.wasFormValidated ? \"is-\"+this.state.errors.email_validation_msg : \"\"}`} value={this.state.email} onChange={this.handleChange}/>\r\n                        {this.state.errors.email && <div className=\"invalid-feedback\">{this.messages.email_incorrect}</div>}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"description\" className=\"col-sm-2 col-form-label\">Description</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <textarea style={{maxHeight: 200}} type=\"text\" name=\"description\" id=\"description\" className={`form-control ${this.state.wasFormValidated ? \"is-\"+this.state.errors.description_validation_msg : \"\"}`} value={this.state.description} onChange={this.handleChange}/>\r\n                        {this.state.errors.description && <div className=\"invalid-feedback\">{this.messages.description_incorrect}</div>}\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-6\">\r\n                        <button className=\"btn btn-success btn-block\" onClick={this.handleSubmit}>Submit</button>\r\n                    </div>\r\n                    <div className=\"col-sm-6\">\r\n                        <button className=\"btn btn-light btn-block\" onClick={this.handleClear}>Clear</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n         );\r\n    }\r\n}\r\n \r\nexport default AddEvent;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport EventList from './EventList';\r\nimport AddEvent from './AddEvent';\r\n\r\nclass App extends Component {\r\n\r\n  state = { \r\n      events: [\r\n        {\r\n          id: 0,\r\n          title: 'Example event',\r\n          description: 'Just to check if everything looks fine.',\r\n          typeOfEvent: 'Sport',\r\n          phone: '777777777',\r\n          email: 'example@email.com',\r\n          location: 'London',\r\n          date: '2020-04-20',\r\n          dateAdded: new Date().getTime(),\r\n        },\r\n      ],\r\n      isDetailActive: false,\r\n      currentId: 0,\r\n      formIsActive: false,\r\n      errors: {\r\n        title: false,\r\n        date: false,\r\n        location: false,\r\n        typeOfEvent: false,\r\n        phone: false,\r\n        email: false,\r\n        description: false,\r\n    }\r\n   }\r\n   \r\ncounter = this.state.events.length\r\n  \r\n  addEvent = (title, date, location, typeOfEvent, phone, email, description) => {\r\n\r\n    const event = {\r\n      id: this.counter,\r\n      title,\r\n      date,\r\n      location,\r\n      typeOfEvent,\r\n      phone,\r\n      email,\r\n      description,\r\n      dateAdded: new Date().getTime(),\r\n    }\r\n    this.counter++;\r\n    this.setState(prevState => ({\r\n      events: [...prevState.events, event]\r\n    }))\r\n    return true\r\n  }\r\n\r\n  setCurrentId = (id) => {\r\n    this.setState({\r\n      currentId: id\r\n    })\r\n  }\r\n\r\n  handleFormActivation = () => {\r\n    this.setState({\r\n      formIsActive: !this.state.formIsActive\r\n    })\r\n  }\r\n\r\n  showEventDetails = (id) => {\r\n      this.setState({\r\n        isDetailActive: !this.state.isDetailActive,\r\n        currentId: id,\r\n      })\r\n  }\r\n\r\n  render() { \r\n\r\n    return ( \r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n\r\n          <div className=\"col-sm formComponent\">\r\n            <button className={`btn ${this.state.formIsActive ? \"btn-danger\" : \"btn-primary\"} formActivationButton`} onClick={this.handleFormActivation}>{this.state.formIsActive ? \"Cancel\" : \"Add event\"}</button>\r\n            {this.state.formIsActive ? <AddEvent addEvent={this.addEvent} /> : null}\r\n          </div>\r\n\r\n          <div className=\"col-sm\">\r\n            <EventList events={this.state.events} setCurrentId={this.setCurrentId} currentId={this.state.currentId} isDetailActive={this.state.isDetailActive} showEventDetails={this.showEventDetails}/>\r\n          </div>\r\n        </div>\r\n\r\n        {/* <div>\r\n            <EventDetails events={this.state.events} title={this.state.events.title} currentId={this.state.currentId}/>\r\n        </div> */}\r\n\r\n      </div>  \r\n\r\n      \r\n     );\r\n  }\r\n}\r\n \r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}